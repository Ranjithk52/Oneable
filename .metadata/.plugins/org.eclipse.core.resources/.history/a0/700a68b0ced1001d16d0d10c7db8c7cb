package com.ojas.spring.git;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.ListBranchCommand;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.lib.Ref;

//public class GitBranchLister {
//
//    public static void main(String[] args) throws IOException, GitAPIException {
//        File repoDir = new File("/path/to/your/repository");
//        Git git = Git.open(repoDir);
//
//        List<Ref> branches = git.branchList().setListMode(ListBranchCommand.ListMode.ALL).call();
//
//        for (Ref branch : branches) {
//            System.out.println("Branch: " + branch.getName());
//        }
//
//        git.close();
//    }
//}

import org.eclipse.jgit.api.LsRemoteCommand;
import org.eclipse.jgit.lib.Constants;
import org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider;
import java.util.List;

import org.eclipse.jgit.api.LsRemoteCommand;
import org.eclipse.jgit.lib.Constants;
import org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider;
import java.io.ByteArrayOutputStream;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.lib.Ref;
import org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider;

import java.io.File;
import java.io.IOException;
import java.util.List;

//public class GitBranchLister {
//    public static void main(String[] args) throws IOException, GitAPIException {
//        // Replace with your GitHub username and password
//        String username = "Ranjithk52";
//        String password = "Udwitha@2019";
//
//        // Clone the repository
//        Git git = Git.cloneRepository()
//                .setURI("https://github.com/Ranjithk52/Practice.git")
//                .setCredentialsProvider(new UsernamePasswordCredentialsProvider(username, password))
//                //.setDirectory(new File("/Ranjithk52/Practice/branches"))
//                .call();
//
//        // Get the branches in the repository
//        List<Ref> branches1 = git.branchList().call();
//
//        // Print the branch names
//        for (Ref branch : branches1) {
//            System.out.println(branch.getName());
//        }
//
//        // Close the repository
//        git.close();
//    }
//}
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.ListBranchCommand;
import org.eclipse.jgit.lib.Ref;

import java.util.List;

public class GitBranchLister {

    public static void main(String[] args) {
        // Path to the local git repository
        String repoPath = "/path/to/local/repo";

        try (Git git = Git.open(new File(repoPath))) {
            // Get the list of all local branches
            List<Ref> branches = git.branchList().call();

            // Output the name of each branch
            for (Ref branch : branches) {
                System.out.println("Branch: " + branch.getName());
            }

            // Alternatively, get the list of all remote branches
            List<Ref> remoteBranches = git.branchList()
                    .setListMode(ListBranchCommand.ListMode.REMOTE)
                    .call();

            // Output the name of each remote branch
            for (Ref branch : remoteBranches) {
                System.out.println("Remote branch: " + branch.getName());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}


