package com.ojas.spring.controller;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

//import javax.mail.internet.MimeUtility;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.reflect.TypeToken;

import com.ojas.spring.model.Branches;
import com.ojas.spring.model.FileContent;
import com.ojas.spring.model.GitIntegration;
import com.ojas.spring.service.GitServiceImpl;


import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

@RestController
@RequestMapping("/gitcontent")
public class GitContent {
	@Autowired
	private GitServiceImpl gitServiceImpl;
	
	 @PostMapping("/getcode")
	public  String getGitContent(@RequestBody GitIntegration gitIntegration) throws IOException {
	    
		return gitServiceImpl.getGitContent(gitIntegration);
	}
	 
	 
	 @PostMapping("/nooflines")
	 public  int getNoOfLines(@RequestBody GitIntegration gitIntegration)  throws IOException {
		 
		 return gitServiceImpl.getNoOfLines(gitIntegration);
		 
	 }
	
	 
	 @PostMapping("/branches") 
	 public List<Branches> getBranchCount(@RequestBody GitIntegration gitIntegration) throws IOException {
		 
		 
		 return gitServiceImpl.getBranchCount(gitIntegration);
	 }
	 
	 

	@PostMapping("/commits") 
	public int getTotalChanges(@RequestBody GitIntegration integration) throws IOException {
		
		return gitServiceImpl.getTotalChanges(integration);
	}
	
	@PostMapping("/reviewcomments") 
	   public List<String> getCodeReviewComments(@RequestBody GitIntegration integration) throws IOException{
		
		return gitServiceImpl.getCodeReviewComments(integration);
	}
	
	@PostMapping("/changes")
	public List<String> fetchCommitChanges(@RequestBody GitIntegration integration) throws IOException {
		
		return gitServiceImpl.fetchCommitChanges(integration);
		
	}

	
}   
	
	
	
		
	

	
		
		
		
		


	


