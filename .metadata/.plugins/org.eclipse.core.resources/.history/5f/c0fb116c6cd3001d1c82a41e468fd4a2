package com.ojas.spring.git;

import java.io.File;
import java.io.IOException;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.lib.Repository;
import org.eclipse.jgit.lib.TextProgressMonitor;
import org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider;
import org.eclipse.jgit.revwalk.RevCommit;
import org.eclipse.jgit.revwalk.RevWalk;

public class GitComments {

  public static void main(String[] args) throws IOException, GitAPIException {
    // Replace these with your Git repository URL, username, and access token
    String repoUrl = "https://github.com/username/repository.git";
    String username = "username";
    String accessToken = "access_token";

    try (Git git = Git.cloneRepository()
        .setCredentialsProvider(new UsernamePasswordCredentialsProvider(username, accessToken))
        .setProgressMonitor(new TextProgressMonitor())
        .setURI(repoUrl)
        .setDirectory(new File("local/repo/path"))
        .call()) {
      // Get the latest commit
      RevWalk walk = new RevWalk(git.getRepository());
      RevCommit latestCommit = walk.parseCommit(git.getRepository().resolve("HEAD"));

      // Get the commit before the latest one
      RevCommit previousCommit = walk.parseCommit(latestCommit.getParent(0).getId());

      // Get the count of changes between the latest and previous commit
      int changesCount = git.diff()
          .setOldTree(git.getRepository().resolve(previousCommit.getName() + "^{tree}"))
          .setNewTree(git.getRepository().resolve(latestCommit.getName() + "^{tree}"))
          .call()
          .size();

      System.out.println("Number of changes made in the latest commit: " + changesCount);
    }
  }
}

