package com.ojas.spring.git;

//import java.io.File;
//import java.io.IOException;
//import org.eclipse.jgit.api.Git;
//import org.eclipse.jgit.api.errors.GitAPIException;
//import org.eclipse.jgit.lib.ObjectReader;
//import org.eclipse.jgit.lib.TextProgressMonitor;
//import org.eclipse.jgit.revwalk.RevCommit;
//import org.eclipse.jgit.revwalk.RevWalk;
//import org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider;
//import org.eclipse.jgit.treewalk.CanonicalTreeParser;
//
//public class GitComments {
//
//  public static void main(String[] args) throws IOException, GitAPIException {
//    // Replace this with the path to your Git repository
//    //String repoPath = "Ranjithk52/Practice";
//    
//    // Replace these with your GitHub credentials
//    String repoUrl = "https://github.com/username/repository.git";
//    String username = "Ranjithk52";
//    String accessToken = "y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";
//
//    
//  
//
//    try (Git git = Git.cloneRepository()
//        .setCredentialsProvider(new UsernamePasswordCredentialsProvider(username, accessToken))
//        .setProgressMonitor(new TextProgressMonitor())
//        .setURI(repoUrl)
//        //.setDirectory(new File("local/repo/path"))
//        .call()) {
//      // Get the latest commit
//      RevWalk walk = new RevWalk(git.getRepository());
//      RevCommit latestCommit = walk.parseCommit(git.getRepository().resolve("HEAD"));
//
//      // Get the commit before the latest one
//      RevCommit previousCommit = walk.parseCommit(latestCommit.getParent(0).getId());
//
//      // Get the count of changes between the latest and previous commit
//      ObjectReader reader = git.getRepository().newObjectReader();
//      CanonicalTreeParser oldTreeIter = new CanonicalTreeParser();
//      oldTreeIter.reset(reader, previousCommit.getTree().getId());
//      CanonicalTreeParser newTreeIter = new CanonicalTreeParser();
//      newTreeIter.reset(reader, latestCommit.getTree().getId());
//      int changesCount = git.diff()
//          .setOldTree(oldTreeIter)
//          .setNewTree(newTreeIter)
//          .call()
//          .size();
//
//      System.err.println("Number of changes made in the latest commit: " + changesCount);
//    }
//  }
//}
import java.io.File;
import java.io.IOException;
import org.eclipse.jgit.api.Git;
import org.eclipse.jgit.api.errors.GitAPIException;
import org.eclipse.jgit.lib.ObjectReader;
import org.eclipse.jgit.lib.TextProgressMonitor;
import org.eclipse.jgit.revwalk.RevCommit;
import org.eclipse.jgit.revwalk.RevWalk;
import org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider;
import org.eclipse.jgit.treewalk.CanonicalTreeParser;

public class GitComments {

  public static void main(String[] args) throws IOException, GitAPIException {
    // Replace these with your GitHub credentials
    String repoUrl = "https://github.com/Ranjithk52/Practice.git";
    String username = "Ranjithk52";
    String accessToken = "y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";

    try (Git git = Git.open(new File("/Ranjithk52/Practice"))) {
      git.fetch()
          .setCredentialsProvider(new UsernamePasswordCredentialsProvider(username, accessToken))
          .setProgressMonitor(new TextProgressMonitor())
          .call();

      // Get the latest commit
      RevWalk walk = new RevWalk(git.getRepository());
      RevCommit latestCommit = walk.parseCommit(git.getRepository().resolve("HEAD"));

      // Get the commit before the latest one
      RevCommit previousCommit = walk.parseCommit(latestCommit.getParent(0).getId());

      // Get the count of changes between the latest and previous commit
      ObjectReader reader = git.getRepository().newObjectReader();
      CanonicalTreeParser oldTreeIter = new CanonicalTreeParser();
      oldTreeIter.reset(reader, previousCommit.getTree().getId());
      CanonicalTreeParser newTreeIter = new CanonicalTreeParser();
      newTreeIter.reset(reader, latestCommit.getTree().getId());
      int changesCount = git.diff()
          .setOldTree(oldTreeIter)
          .setNewTree(newTreeIter)
          .call()
          .size();

      System.out.println("Number of changes made in the latest commit: " + changesCount);
    }
  }
}


